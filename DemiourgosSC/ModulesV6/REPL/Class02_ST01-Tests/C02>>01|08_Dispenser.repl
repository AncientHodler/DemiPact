(print "")
(print "===================Last Dispenser Tests============================")
(begin-tx "INIT TX 000 - Chain Data Time SetUp Definition")
(namespace "free")
(env-chain-data
    {"prev-block-hash": "98c486052a5147fdd30fa43cc6d67e0a4e680c856c37f9157cb788cd67d58006",
     "block-time": TV.TIME00}
)
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-gas)
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Manual Ouro Price Update")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AOZ", "caps": [] }
        { "key": "PK_AncientHodler", "caps": [] }
        ;{ "key": "PK_DHV", "caps": [] }
        ;{ "key": "PK_CST", "caps": [] }
        { "key": "PK_DSP", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPL|DSP:module{DeployerDispenserV6} DSP)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-ATS:module{AutostakeV4} ATS)
        (ref-DPL|DSP:module{DeployerDispenserV6} DSP)
        (ouro:string (ref-DALOS::UR_OuroborosID))
        (os:decimal (ref-DPTF::UR_Supply ouro))

        (treasury:string (ref-DALOS::GOV|DHV1|SC_NAME))
        (validators:string (ref-DPL|DSP::GOV|CST1|SC_NAME))
        (dispenser:string (ref-DPL|DSP::GOV|DSP1|SC_NAME))

        (auryn:string (ref-DALOS::UR_AurynID))
        (elite-auryn:string (ref-DALOS::UR_EliteAurynID))
        (auryndex:string (at 0 (ref-DPTF::UR_RewardBearingToken auryn)))
        (elite-auryndex:string (at 0 (ref-DPTF::UR_RewardBearingToken elite-auryn)))
    )
    ;(ref-DPL|DSP::A_ManualOuroPriceUpdate)
    ;(ref-DPL|DSP::A_OuroMinterStageOne)
    [
        (format "Minting Ouro Daily is {}" [(ref-DPL|DSP::A_OuroMinterStageOne)])
        (format "Ouro Price is {}" [(ref-DALOS::UR_OuroborosPrice)])
        (format "Ouro Supply is {}" [os])
        (format "OURO on Treasury is {}" [(ref-DPTF::UR_AccountSupply ouro treasury)])
        (format "OURO on Validators is {}" [(ref-DPTF::UR_AccountSupply ouro validators)])
        (format "OURO on Dispenser is {}" [(ref-DPTF::UR_AccountSupply ouro dispenser)])

        (format "Auryndex is {}" [(ref-ATS::URC_Index auryndex)])
        (format "Elite-Auryndex is {}" [(ref-ATS::URC_Index elite-auryndex)])

    ]
    
)

(print "")
(print "")
(format "<<<<<<<Manual Ouro Price Update Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Koson Minter 1of3 Testing")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AOZ", "caps": [] }
        { "key": "PK_AncientHodler", "caps": [] }
        ;{ "key": "PK_DHV", "caps": [] }
        ;{ "key": "PK_CST", "caps": [] }
        { "key": "PK_DSP", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPL|DSP:module{DeployerDispenserV6} DSP)
    )
    ;(ref-DPL|DSP::A_OuroMinterStageOne)
    (ref-DPL|DSP::A_KosonMinterStageOne_1of3)
)

(print "")
(print "")
(format "<<<<<<<Minting Koson 1of3 Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Koson Minter 2of3 Testing")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AOZ", "caps": [] }
        { "key": "PK_AncientHodler", "caps": [] }
        ;{ "key": "PK_DHV", "caps": [] }
        ;{ "key": "PK_CST", "caps": [] }
        { "key": "PK_DSP", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPL|DSP:module{DeployerDispenserV6} DSP)
    )
    ;(ref-DPL|DSP::A_OuroMinterStageOne)
    (ref-DPL|DSP::A_KosonMinterStageOne_2of3)
)

(print "")
(print "")
(format "<<<<<<<Minting Koson 2of3 Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Koson Minter 3of3 Testing")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AOZ", "caps": [] }
        { "key": "PK_AncientHodler", "caps": [] }
        ;{ "key": "PK_DHV", "caps": [] }
        ;{ "key": "PK_CST", "caps": [] }
        { "key": "PK_DSP", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (ref-DPL|DSP:module{DeployerDispenserV6} DSP)
        (ref-DPL|UR:module{DeployerReadsV3} DPL-UR)
        (patron:string  KST.ANHD)
        (ats:string KST.ATSTK)
        (vst:string KST.VESTG)
        (orb:string KST.OURBR)
        (tls:string KST.TALOS)
        (swp:string KST.SWAPR)
        (ignis:string (ref-DALOS::UR_IgnisID))
        (ignis1:decimal (ref-DPTF::UR_AccountSupply ignis ats))
        (ignis2:decimal (ref-DPTF::UR_AccountSupply ignis vst))
        (ignis3:decimal (ref-DPTF::UR_AccountSupply ignis orb))
        (ignis4:decimal (ref-DPTF::UR_AccountSupply ignis tls))
        (ignis5:decimal (ref-DPTF::UR_AccountSupply ignis swp))
        (discount:decimal 0.415)
        (ds:string (ref-DALOS::UDC_MakeIDP discount))
        (p1:decimal 0.00037241)
        (p2:decimal 0.01032241)
        (p3:decimal 1.31038241)
        (p4:decimal 1.0)
        (p5:decimal 1.329321)
        (p6:decimal 22342.012)
        (p7:decimal 0.000002321)
    )
    ;(ref-DPL|DSP::A_OuroMinterStageOne)
    (ref-DPL|DSP::A_KosonMinterStageOne_3of3)
    ;[ds]
    [
        (ref-DPL|UR::UC_ConvertPrice p1)
        ;(ref-DPL|DSP::UC_ConvertDecimalToString p1 3)
        (ref-DPL|UR::UC_ConvertPrice p2)
        (ref-DPL|UR::UC_ConvertPrice p3)
        (ref-DPL|UR::UC_ConvertPrice p4)
        (ref-DPL|UR::UC_ConvertPrice p5)
        (ref-DPL|UR::UC_ConvertPrice p6)
        (ref-DPL|UR::UC_ConvertPrice p7)
    ]
    ;[
    ;    (ref-TFT::DPTF-DPMF-ATS|UR_OwnedTokens vst 1)
    ;    (ref-TFT::DPTF-DPMF-ATS|UR_OwnedTokens vst 2)
    ;    (ref-TFT::DPTF-DPMF-ATS|UR_OwnedTokens vst 3)
    ;]
    
    ;(ref-TFT::DPTF-DPMF-ATS|UR_FilterKeysForInfo patron 1 true)
    
    
)

(print "")
(print "")
(format "<<<<<<<Minting Koson 3of3 Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "UR Reader Testing")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AOZ", "caps": [] }
        { "key": "PK_AncientHodler", "caps": [] }
        ;{ "key": "PK_DHV", "caps": [] }
        ;{ "key": "PK_CST", "caps": [] }
        { "key": "PK_DSP", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-DPL|DSP:module{DeployerDispenserV6} DSP)
        (ref-DPL|UR:module{DeployerReadsV3} DPL-UR)
        (patron:string  KST.ANHD)
    )
    [
        ;(ref-DPL|UR::URC_0001_Header patron)
        ;(ref-DPL|UR::URC_0002_Primordials patron)
        true
    ]
    
)

(print "")
(print "")
(format "<<<<<<<URC_Header {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "UR Reader Testing")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ouro:string "OURO-98c486052a51")
        (auryn:string "AURYN-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
    )
    ;(format "Ouro FeePromile is {}" [id-fee])
    (ref-TS01-C1::DPTF|C_Transfer patron ouro patron emma 1.0 false)
)

(print "")
(print "")
(format "<<<<<<<TransferV3 for Ouro costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "UR Reader Testing")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ouro:string "OURO-98c486052a51")
        (auryn:string "AURYN-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
    )
    ;(format "Ouro FeePromile is {}" [id-fee])
    (ref-TS01-C1::DPTF|C_Transfer patron auryn patron emma 1.0 false)
)

(print "")
(print "")
(format "<<<<<<<TransferV3 for AURYN costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "UR Reader Testing")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ouro:string "OURO-98c486052a51")
        (auryn:string "AURYN-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
    )
    ;(format "Ouro FeePromile is {}" [id-fee])
    (ref-TS01-C1::DPTF|C_Transfer patron e-auryn patron emma 1.0 false)
)

(print "")
(print "")
(format "<<<<<<<TransferV3 for ELITEAURYN costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "TransmuteV2")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ignis:string "GAS-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
    )
    (ref-TS01-C1::DPTF|C_Transmute patron ignis patron 1200.0)
)

(print "")
(print "")
(format "<<<<<<<TransmuteV2 with OURO costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "TransmuteV2")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ignis:string "GAS-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
    )
    (ref-TS01-C1::DPTF|C_Transmute patron e-auryn patron 1.0)
)

(print "")
(print "")
(format "<<<<<<<TransmuteV2 with EA costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;