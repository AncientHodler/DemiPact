
(begin-tx "Init STEP 07a - Create Bloodshed Legendary")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-BSL:module{BsLegendary} BLOODSHED-L)
        (patron:string  KST.ANHD) 
        (dhb:string "DHB-98c486052a51")
    )
    (ref-BSL::A_Legendary patron dhb (enumerate 1 160))
)
(print "")
(print "")
(format "<<<<<<<Init STEP 07a - Create Bloodshed Legendary Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 07b - Create Bloodshed Epic")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-BSE:module{BsEpic} BLOODSHED-E)
        (patron:string  KST.ANHD) 
        (dhb:string "DHB-98c486052a51")
    )
    (ref-BSE::A_Epic patron dhb (enumerate 1 1536))
)
(print "")
(print "")
(format "<<<<<<<Init STEP 07b - Create Bloodshed Epic Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 07c - Create Bloodshed Rare")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-BSR:module{BsRare} BLOODSHED-R)
        (patron:string  KST.ANHD) 
        (dhb:string "DHB-98c486052a51")
    )
    (ref-BSR::A_Rare patron dhb (enumerate 1 3168))
)
(print "")
(print "")
(format "<<<<<<<Init STEP 07c - Create Bloodshed Rare Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 07d - Create Bloodshed Common")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-BSC:module{BsCommon} BLOODSHED-C)
        (patron:string  KST.ANHD) 
        (dhb:string "DHB-98c486052a51")
    )
    (ref-BSC::A_Common patron dhb (enumerate 1 4032))
)
(print "")
(print "")
(format "<<<<<<<Init STEP 07d - Create Bloodshed Common Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 07e - Create Bloodshed Common")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-BSC:module{BsCommon} BLOODSHED-C)
        (patron:string  KST.ANHD) 
        (dhb:string "DHB-98c486052a51")
    )
    (ref-BSC::A_Common patron dhb (enumerate 4033 8064 1))
)
(print "")
(print "")
(format "<<<<<<<Init STEP 07e - Create Bloodshed Common Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 08 - T1 Commati Set")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-BSS:module{BsSets} BLOODSHED-SETS)
        (patron:string  KST.ANHD) 
        (dhb:string "DHB-98c486052a51")
    )
    (ref-BSS::A01_TierOneCommonComati patron dhb)
)
(print "")
(print "")
(format "<<<<<<<Init STEP 08 - T1 Commati Set Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)