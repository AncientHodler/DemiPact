(print "")
(print "===================Initialise Ouronet_TX-002============================")
(begin-tx "INIT TX 000 - Chain Data Time SetUp Definition")
(namespace "free")
(env-chain-data
    {"prev-block-hash": "98c486052a5147fdd30fa43cc6d67e0a4e680c856c37f9157cb788cd67d58006",
     "block-time": TV.TIME00}
)
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-gas)
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "REPL_Test_000x - TX03 - Accounts Display")
(namespace "free")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AOZ", "caps": [] }
    ]
)
(print "=============================================BEGIN DPTF TESTS==========================================")
(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ouroboros:string (ref-DALOS::GOV|OUROBOROS|SC_NAME))
        (dalos:string (ref-DALOS::GOV|DALOS|SC_NAME))
        (liquid:string (ref-DALOS::GOV|LIQUID|SC_NAME))
    )
    [
        (format "ANHD Kadena is {}" [(ref-DALOS::UR_AccountKadena KST.ANHD)])
        (format "CTO is {}" [(ref-DALOS::UR_AccountKadena (at 0 (ref-DALOS::UR_DemiurgoiID)))])
        (format "HOV is {}" [(ref-DALOS::UR_AccountKadena (at 1 (ref-DALOS::UR_DemiurgoiID)))])
        (format "OUROBOROS is {}" [(ref-DALOS::UR_AccountKadena ouroboros)])
        (format "DALOS is {}" [(ref-DALOS::UR_AccountKadena dalos)])
        (format "LIQUID is {}" [(ref-DALOS::UR_AccountKadena liquid)])
    ]
)

(env-gas)
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;DISPO Tests
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "DISPO 1|3 Tests")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
    ]
)

(print "")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (ref-ATS:module{AutostakeV4} ATS)

        (receiver:string KST.EMMA)
        (a-id:string "AURYN-98c486052a51")
        (ea-id:string "ELITEAURYN-98c486052a51")
        (elite-auryndex:string (at 0 (ref-DPTF::UR_RewardToken a-id)))
    )
    [
        (format "Emma has {} Elite-Auryn" [(ref-DPTF::UR_AccountSupply ea-id receiver)])
        (format "Elite-Auryndex before 5000 EA Transfer is {}" [(ref-ATS::URC_Index elite-auryndex)])
    ]
    
)
(print "")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)

        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ea-id:string "ELITEAURYN-98c486052a51")
    )
    (ref-TS01-C1::DPTF|C_Transfer patron ea-id patron receiver 5000.0 false)
    (print "AH transfered 5000 EA to Emma")
)
(print "")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (ref-ATS:module{AutostakeV4} ATS)

        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (a-id:string "AURYN-98c486052a51")
        (ea-id:string "ELITEAURYN-98c486052a51")
        (elite-auryndex:string (at 0 (ref-DPTF::UR_RewardToken a-id)))
    )
    [
        (format "Emma has after transfer from AH, {} Elite-Auryn" [(ref-DPTF::UR_AccountSupply ea-id receiver)])
        (format "Elite-Auryndex after 5000 EA Transfer is {}" [(ref-ATS::URC_Index elite-auryndex)])
    ]
    
)
(print "")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)

        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ea-id:string "ELITEAURYN-98c486052a51")
    )
    (format "Minimum OURO for Emma is {}" [(ref-TFT::URC_MinimumOuro receiver)])
)
(print "")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)

        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ea-id:string "ELITEAURYN-98c486052a51")
        (ouro:string "OURO-98c486052a51")
    )
    (format "Emma currently has {} OURO" [(ref-DPTF::UR_AccountSupply ouro receiver)])
)
(print "")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)

        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ea-id:string "ELITEAURYN-98c486052a51")
        (ouro:string "OURO-98c486052a51")
        (gas:string "GAS-98c486052a51")
    )
    [
        (format "Emma currently has {} OURO" [(ref-DPTF::UR_AccountSupply ouro receiver)]) 
        (format "Emma currently has before Sublimate {} GAS" [(ref-DPTF::UR_AccountSupply gas receiver)]) 
        (format "Emma currently has {} EA" [(ref-DPTF::UR_AccountSupply ea-id receiver)]) 
    ]
)
(print "")
(print "Emma Sublimates 10 OURO, while having 0 Ouro Balance, to Make IGNIS")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (ref-TS01-C2:module{TalosStageOne_ClientTwoV3} TS01-C2)

        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ea-id:string "ELITEAURYN-98c486052a51")
        (ouro:string "OURO-98c486052a51")
        (gas:string "GAS-98c486052a51")
    )
    (ref-TS01-C2::ORBR|C_Sublimate receiver receiver 10.0)
)
(print "")
(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-ATS:module{AutostakeV4} ATS)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)

        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (a-id:string "AURYN-98c486052a51")
        (ea-id:string "ELITEAURYN-98c486052a51")
        (ouro:string "OURO-98c486052a51")
        (gas:string "GAS-98c486052a51")
        (auryndex:string (at 0 (ref-DPTF::UR_RewardToken ouro)))
        (elite-auryndex:string (at 0 (ref-DPTF::UR_RewardToken a-id)))
    )
    [
        (format "Emma currently has {} OURO" [(ref-DPTF::UR_AccountSupply ouro receiver)]) 
        (format "Emma currently has after Sublimate {} GAS" [(ref-DPTF::UR_AccountSupply gas receiver)]) 
        (format "Emma currently has {} EA" [(ref-DPTF::UR_AccountSupply ea-id receiver)])
        (format "Emma has Ignis Gas Discount {}" [(ref-DALOS::URC_IgnisGasDiscount receiver)])
        (format "Emma has Kadena Gas Discount {}" [(ref-DALOS::URC_KadenaGasDiscount receiver)])
        (format "Auryndex prior to ClearDispo is {}" [(ref-ATS::URC_Index auryndex)])
        (format "Elite-Auryndex prior to ClearDispo is {}" [(ref-ATS::URC_Index elite-auryndex)])
    ]
)

(print "")
(print "")
(format "<<<<<<<Dispo 1|3 Tests Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Dispo 2|x Clear Dispo Test")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_Emma", "caps": [] }
    ]
)

(let
    (
        ;;refs
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (receiver:string KST.EMMA)
    )
    (ref-TS01-C1::DPTF|C_ClearDispo receiver receiver)
)

(print "")
(print "")
(format "<<<<<<<Dispo 2|3 Clear Dispo Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Dispo 3|3 Check After Clear Dispo Checks")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
    ]
)

(let
    (
        ;;refs
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-ATS:module{AutostakeV4} ATS)
        (receiver:string KST.EMMA)
        (a-id:string "AURYN-98c486052a51")
        (ea-id:string "ELITEAURYN-98c486052a51")
        (ouro:string "OURO-98c486052a51")
        (gas:string "GAS-98c486052a51")
        (auryndex:string (at 0 (ref-DPTF::UR_RewardToken ouro)))
        (elite-auryndex:string (at 0 (ref-DPTF::UR_RewardToken a-id)))
    )
    [
        (format "Emma currently has {} OURO" [(ref-DPTF::UR_AccountSupply ouro receiver)]) 
        (format "Emma currently has {} GAS" [(ref-DPTF::UR_AccountSupply gas receiver)]) 
        (format "Emma currently has {} EA" [(ref-DPTF::UR_AccountSupply ea-id receiver)])
        (format "Emma has Ignis Gas Discount {}" [(ref-DALOS::URC_IgnisGasDiscount receiver)])
        (format "Emma has Kadena Gas Discount {}" [(ref-DALOS::URC_KadenaGasDiscount receiver)])
        (format "Auryndex after ClearDispo is {}" [(ref-ATS::URC_Index auryndex)])
        (format "Elite-Auryndex after ClearDispo is {}" [(ref-ATS::URC_Index elite-auryndex)])
    ]
)

(print "")
(print "")
(format "<<<<<<<Dispo 3|3 Checks {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;; 1] Issue Tests
;; 1.1] Issue 34 new DPTFs
(begin-tx "DPTF Tx 001 Issue 7 DPTFs Part 1|3")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(let
    (
        (patron:string KST.ANHD)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (split-kda:[decimal] 
            (ref-DALOS::URC_SplitKDAPrices
                patron
                (* (ref-DALOS::UR_UsagePrice "dptf") 7.0)
            )
        )
    )
    (env-sigs
        [   
            { "key": "PK_AncientHodler", "caps": [] }
            { "key": "6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" , 
              "caps": 
                [
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b"
                        (at 2 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e"
                        (at 0 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:Y_iaJ6fE-ic7kwTtLfty66e3zyGGYIX7OdiMrIdkYBg"
                        (at 3 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:HVNhO-WfROlC-guMUNk91MJWPzfSiP1O7Ip4T4g93O0"
                        (at 1 split-kda)
                    )
                ] 
            }
        ]
    )
    (let
        (
            (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
            (issued-ids:[string]
                (ref-TS01-C1::DPTF|C_Issue
                    patron
                    patron
                    ["BinanceUSD" "TrueUSD" "TetherUSD" "CircleUSD" "DemiourgosUSD" "AustralianUSD" "CanadianUSD"]
                    ["BUSD" "TUSD" "USDT" "USDC" "USDD" "AUSD" "CUSD"]
                    (make-list 7 24)                            ;;precision
                    (make-list 7 true)                          ;;can change owner
                    (make-list 7 true)                          ;;can upgrade
                    (make-list 7 true)                          ;;can can-add-special-role
                    (make-list 7 false)                         ;;can-freeze
                    (make-list 7 false)                         ;;can-wipe
                    (make-list 7 true)                          ;;can-pause
                )
            )
        )
        [
            issued-ids
            (format "AH has {} GAS" [(ref-DPTF::UR_AccountSupply (ref-DALOS::UR_IgnisID) KST.ANHD)])
        ]
        
    )
)
(print "")
(print "")
(format "<<<<<<<STEP 001 Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "DPTF Tx 002 Issue 7 DPTFs Part 2|3")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(let
    (
        (patron:string KST.ANHD)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (split-kda:[decimal] 
            (ref-DALOS::URC_SplitKDAPrices
                patron
                (* (ref-DALOS::UR_UsagePrice "dptf") 7.0)
            )
        )
    )
    (env-sigs
        [   
            { "key": "PK_AncientHodler", "caps": [] }
            { "key": "6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" , 
              "caps": 
                [
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b"
                        (at 2 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e"
                        (at 0 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:Y_iaJ6fE-ic7kwTtLfty66e3zyGGYIX7OdiMrIdkYBg"
                        (at 3 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:HVNhO-WfROlC-guMUNk91MJWPzfSiP1O7Ip4T4g93O0"
                        (at 1 split-kda)
                    )
                ] 
            }
        ]
    )
    (let
        (
            (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
            (issued-ids:[string]
                (ref-TS01-C1::DPTF|C_Issue
                    patron
                    patron
                    ["BinanceEUR" "TrueEUR" "TetherEUR" "CircleEUR" "DemiourgosEUR" "AustralianEUR" "CanadianEUR"]
                    ["BEUR" "TEUR" "EURT" "EURC" "EURD" "AEUR" "CEUR"]
                    (make-list 7 24)                            ;;precision
                    (make-list 7 true)                          ;;can change owner
                    (make-list 7 true)                          ;;can upgrade
                    (make-list 7 true)                          ;;can can-add-special-role
                    (make-list 7 false)                         ;;can-freeze
                    (make-list 7 false)                         ;;can-wipe
                    (make-list 7 true)                          ;;can-pause
                )
            )
        )
        [
            issued-ids
            (format "AH has {} GAS" [(ref-DPTF::UR_AccountSupply (ref-DALOS::UR_IgnisID) KST.ANHD)])
        ]
    )
)
(print "")
(print "")
(format "<<<<<<<STEP 002 Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "DPTF Tx 003 Issue 20 DPTFs Part 3|3")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(let
    (
        (patron:string KST.ANHD)
        (ref-U|DALOS:module{UtilityDalosV3} U|DALOS)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (split-kda:[decimal] 
            (ref-DALOS::URC_SplitKDAPrices
                patron
                (* (ref-DALOS::UR_UsagePrice "dptf") 21.0)
            )
        )
        (cost-from-thausand:decimal 
            (ref-U|DALOS::UC_GasCost 
                1000.0
                (ref-DALOS::UR_Elite-Tier-Major patron)
                (ref-DALOS::UR_Elite-Tier-Minor patron)
                false
            )
        )
    )
    (env-sigs
        [   
            { "key": "PK_AncientHodler", "caps": [] }
            { "key": "6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" , 
              "caps": 
                [
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b"
                        (at 2 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e"
                        (at 0 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:Y_iaJ6fE-ic7kwTtLfty66e3zyGGYIX7OdiMrIdkYBg"
                        (at 3 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:HVNhO-WfROlC-guMUNk91MJWPzfSiP1O7Ip4T4g93O0"
                        (at 1 split-kda)
                    )
                ] 
            }
        ]
    )
    (let
        (
            (ref-DALOS:module{OuronetDalosV4} DALOS)
            (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
            (info:string (ref-DALOS::DALOS|Info))
            (issued-ids:[string]
                (ref-TS01-C1::DPTF|C_Issue
                    patron
                    patron
                    ["Unity", "Lithium", "Magnesium", "Aluminium", "Titanium", "Germanium", "Gallium", "Indium", "Tellurium", "Bismuth", "Cobalt", "Copper", "Ruthenium", "Palladium", "Silver", "Osmium", "Iridium", "Platinum", "Gold", "Mercury", "Rhenium"]  
                    ["UNITY", "LI", "MG", "AL", "TI", "GE", "GA", "IN", "TE", "BI", "CO", "CU", "RU", "PD", "AG", "OS", "IR", "PT", "AU", "HG", "RE"]
                    (make-list 21 24)                           ;;precision
                    (make-list 21 true)                         ;;can change owner
                    (make-list 21 true)                         ;;can upgrade
                    (make-list 21 true)                         ;;can can-add-special-role
                    (make-list 21 false)                        ;;can-freeze
                    (make-list 21 false)                        ;;can-wipe
                    (make-list 21 true)                         ;;can-pause
                )
            )
            (unity-id:string (at 0 issued-ids))
        )
        (acquire-module-admin free.DALOS)
        (update ref-DALOS::DALOS|PropertiesTable info
            { "unity-id" : unity-id}
        )
        (ref-TS01-C1::DPTF|C_SetFee patron unity-id -1.0)
        (ref-TS01-C1::DPTF|C_DonateFees patron unity-id)
        (ref-TS01-C1::DPTF|C_ToggleFee patron unity-id true)
        (ref-TS01-C1::DPTF|C_ToggleFeeLock patron unity-id true)
        [
            issued-ids
            (format "AH has {} GAS" [(ref-DPTF::UR_AccountSupply (ref-DALOS::UR_IgnisID) KST.ANHD)])
            cost-from-thausand
        ]
    )
)
(print "")
(print "")
(format "<<<<<<<STEP 003 Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "DPTF Tx 004 Mint 10 mil of each token")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (emma:string KST.EMMA)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
    )
    
    (ref-TS01-C1::DPTF|C_Mint patron "BUSD-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "TUSD-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "USDT-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "USDC-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "USDD-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "AUSD-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "CUSD-98c486052a51" patron 10000000.0 true)

    (ref-TS01-C1::DPTF|C_Mint patron "BEUR-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "TEUR-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "EURT-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "EURC-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "EURD-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "AEUR-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "CEUR-98c486052a51" patron 10000000.0 true)

    (ref-TS01-C1::DPTF|C_Mint patron "UNITY-98c486052a51" emma 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "LI-98c486052a51" patron 10000000.0 true)
    (ref-TS01-C1::DPTF|C_Mint patron "MG-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "AL-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "TI-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "GE-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "GA-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "IN-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "TE-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "BI-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "CO-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "CU-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "RU-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "PD-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "AG-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "OS-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "IR-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "PT-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "AU-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "HG-98c486052a51" patron 10000000.0 true)  
    (ref-TS01-C1::DPTF|C_Mint patron "RE-98c486052a51" patron 10000000.0 true)  

)

(print "")
(print "")
(format "<<<<<<<STEP 004 Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;TRANSMUTE TESTS
(begin-tx "TRANSMUTE 01 Test")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (ref-ATS:module{AutostakeV4} ATS)
        (auryn:string "AURYN-98c486052a51")
        (auryndex:decimal (ref-ATS::URC_Index "EliteAuryndex-98c486052a51"))
    )
    (ref-TS01-C1::DPTF|C_Transmute
        patron auryn patron 1.0
    )
    (format "EliteAuryndex before is {} and after is {}" [auryndex (ref-ATS::URC_Index "EliteAuryndex-98c486052a51")])
)

(print "")
(print "")
(format "<<<<<<<STEP 001 Simple Transmute Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "TRANSMUTE 02 Test")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (ref-ATS:module{AutostakeV4} ATS)
        (auryn:string "ELITEAURYN-98c486052a51")
        (eauryndex:decimal (ref-ATS::URC_Index "EliteAuryndex-98c486052a51"))
    )
    (ref-TS01-C1::DPTF|C_Transmute
        patron auryn patron 1.0
    )
    (format "EliteAuryndex before is {} and after is {}" [eauryndex (ref-ATS::URC_Index "EliteAuryndex-98c486052a51")])
)

(print "")
(print "")
(format "<<<<<<<STEP 02 Elite Transmute Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "TRANSMUTE 02 Test")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (emma:string KST.EMMA)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (dalos:string (ref-DALOS::GOV|DALOS|SC_NAME))
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (unity:string "UNITY-98c486052a51")
        (dalos-unity-supply:decimal (ref-DPTF::UR_AccountSupply unity dalos))
    )
    
    (ref-TS01-C1::DPTF|C_Transmute
        patron unity emma 120.0
    )
    [
        (format "Dalos holds before {} and after {} Unity" [dalos-unity-supply (ref-DPTF::UR_AccountSupply unity dalos)])
        (format "Unity Target is {}" [(ref-DPTF::UR_FeeTarget unity)])
        (format "Dalos is {}" [dalos])
    ]
    
)

(print "")
(print "")
(format "<<<<<<<STEP 03 Unity Transmute Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;TRANSFER TESTS
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Transfer Tests 1|4")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ouro:string "OURO-98c486052a51")
        (auryn:string "AURYN-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
        (unity:string "UNITY-98c486052a51")
    )
    ;(format "Ouro FeePromile is {}" [id-fee])
    (ref-TS01-C1::DPTF|C_Transfer patron ouro patron emma 1.0 false)
    ;(ref-TFT::CX_Class1Transfer ouro patron emma 1.0 false)
    (format "Type OURO IZ {}" [(ref-TFT::URC_TransferClasses ouro patron emma 1.0)])
)

(print "")
(print "")
(format "<<<<<<<TransferV3 1|4 for Ouro costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Transfer Tests 2|4")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ouro:string "OURO-98c486052a51")
        (auryn:string "AURYN-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
        (unity:string "UNITY-98c486052a51")
    )
    ;(format "Ouro FeePromile is {}" [id-fee])
    (ref-TS01-C1::DPTF|C_Transfer patron auryn patron emma 1.0 false)
    (format "Type AURYN IZ {}" [(ref-TFT::URC_TransferClasses auryn patron emma 1.0)])
)

(print "")
(print "")
(format "<<<<<<<TransferV3 2|4 for AURYN costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Transfer Tests 3|4")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (ouro:string "OURO-98c486052a51")
        (auryn:string "AURYN-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
        (unity:string "UNITY-98c486052a51")
    )
    ;(format "Ouro FeePromile is {}" [id-fee])
    (ref-TS01-C1::DPTF|C_Transfer patron e-auryn patron emma 1.0 false)
    (format "Type ELITEAURYN IZ {}" [(ref-TFT::URC_TransferClasses e-auryn patron emma 1.0)])
)

(print "")
(print "")
(format "<<<<<<<TransferV3 3|4 for ELITEAURYN costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Transfer Tests 4|4")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")
(let
    (
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (patron:string  KST.ANHD)
        (emma:string  KST.EMMA)
        (lumy:string  KST.LUMY)
        (ouro:string "OURO-98c486052a51")
        (auryn:string "AURYN-98c486052a51")
        (e-auryn:string "ELITEAURYN-98c486052a51")
        (unity:string "UNITY-98c486052a51")
    )
    ;(format "Ouro FeePromile is {}" [id-fee])
    (ref-TS01-C1::DPTF|C_Transfer patron unity emma lumy 10000.0 false)
    (ref-TS01-C1::DPTF|C_Transfer patron unity lumy patron 2500.0 false)
    [
        ;(format "Unity is {} and has Type {}" [(ref-DALOS::UR_UnityID) (ref-TFT::URC_TransferOneOfFour unity emma lumy)])
        ;(format "Unity is {} and has Type {}" [(ref-DALOS::UR_UnityID) (ref-TFT::URC_TransferOneOfFour unity lumy patron)])
        (format "Iz Simple Transfer IZ {}" [(ref-TFT::URC_IzSimpleTransfer unity emma lumy 10000.0)])
        (format "Simple Transfer iz {}" [(ref-TFT::URC_IzSimpleTransfer unity emma lumy 2500.0)])
    ]
    
)

(print "")
(print "")
(format "<<<<<<<TransferV3 4|4 for UNITY costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;
;;
;;
;;
;;
;;
;;Multi TRANSFER TESTS
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "MultiTransfer 1|3")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
    )
    (ref-TS01-C1::DPTF|C_MultiTransfer
        patron
        [
            "BUSD-98c486052a51" "TUSD-98c486052a51" "USDT-98c486052a51" "USDC-98c486052a51" 
            "USDD-98c486052a51" "AUSD-98c486052a51" "CUSD-98c486052a51"
        ]
        patron
        receiver
        (make-list 7 10.0)
        false
    )
    
)

(print "")
(print "")
(format "<<<<<<<MultiTransfer 1|3 7 Tokens {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)

;[
;    (format "Emma has {} BUSD" [(ref-DPTF::UR_AccountSupply "BUSD-98c486052a51" receiver)])
;    (format "Emma has {} TUSD" [(ref-DPTF::UR_AccountSupply "TUSD-98c486052a51" receiver)])
;    (format "Emma has {} USDC" [(ref-DPTF::UR_AccountSupply "USDT-98c486052a51" receiver)])
;    (format "Emma has {} USDD" [(ref-DPTF::UR_AccountSupply "USDD-98c486052a51" receiver)])
;    (format "Emma has {} AUSD" [(ref-DPTF::UR_AccountSupply "AUSD-98c486052a51" receiver)])
;    (format "Emma has {} CUSD" [(ref-DPTF::UR_AccountSupply "CUSD-98c486052a51" receiver)])
;]

;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "MultiTransfer 2|3")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
    )
    (ref-TS01-C1::DPTF|C_MultiTransfer
        patron
        [
            "LI-98c486052a51" "MG-98c486052a51" "AL-98c486052a51" "TI-98c486052a51" "GE-98c486052a51" 
            "GA-98c486052a51" "IN-98c486052a51" "TE-98c486052a51" "BI-98c486052a51" "CO-98c486052a51"
            ;"CU-98c486052a51" "RU-98c486052a51" "PD-98c486052a51" "AG-98c486052a51" "OS-98c486052a51"
            ;"IR-98c486052a51" "PT-98c486052a51" "AU-98c486052a51" "HG-98c486052a51" "RE-98c486052a51"
        ]
        patron
        receiver
        (make-list 10 10.0)
        false
    )
    [
        (format "After MultiTransfer x10 AH has {} GAS" [(ref-DPTF::UR_AccountSupply (ref-DALOS::UR_IgnisID) KST.ANHD)])
    ]
)

(print "")
(print "")
(format "<<<<<<<MultiTransfer 2|3 x10 Costs Before ATS {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;Setup Fees system and Autostake Pools for first 10 Tokens. and repeat MultiTransfer
(begin-tx "MultiTransfer Autostake Issue")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(use DALOS) 
(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (patron:string KST.ANHD)
        (split-kda:[decimal] 
            (ref-DALOS::URC_SplitKDAPrices
                patron
                (* (ref-DALOS::UR_UsagePrice "ats") 5.0)
            )
        )
    )
    (env-sigs
        [   
            { "key": "PK_AncientHodler", "caps": [] }
            { "key": "6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" , 
              "caps": 
                [
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b"
                        (at 2 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e"
                        (at 0 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:Y_iaJ6fE-ic7kwTtLfty66e3zyGGYIX7OdiMrIdkYBg"
                        (at 3 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:HVNhO-WfROlC-guMUNk91MJWPzfSiP1O7Ip4T4g93O0"
                        (at 1 split-kda)
                    )
                ] 
            }
        ]
    )
    (format "KDA Split is {}" [split-kda])
    (let
        (
            (ref-TS01-C2:module{TalosStageOne_ClientTwoV3} TS01-C2)
            (ats-ids:[string]
                (ref-TS01-C2::ATS|C_Issue
                    patron
                    patron
                    ["Galithium" "Magnindium" "Telluminum" "Bisthanium" "CobaltGermanide"]
                    (make-list 5 24)
                    ["GA-98c486052a51" "MG-98c486052a51" "TE-98c486052a51" "BI-98c486052a51" "CO-98c486052a51"]
                    (make-list 5 true)
                    ["LI-98c486052a51" "IN-98c486052a51" "AL-98c486052a51" "TI-98c486052a51" "GE-98c486052a51"]
                    (make-list 5 true)
                )  
            )
        )
        [
            ats-ids
            (format "AH has {} GAS" [(ref-DPTF::UR_AccountSupply (ref-DALOS::UR_IgnisID) KST.ANHD)])
        ]
    )
)

(print "")
(print "")
(format "<<<<<<<MultiTransfer Autostake Issue  Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;Set transfer fees for first ten metals
(begin-tx "Setup Autostake RTs")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (m1:string "LI-98c486052a51")
        (m2:string "MG-98c486052a51")
        (m3:string "AL-98c486052a51")
        (m4:string "TI-98c486052a51")
        (m5:string "GE-98c486052a51")
        (m6:string "GA-98c486052a51")
        (m7:string "IN-98c486052a51")
        (m8:string "TE-98c486052a51")
        (m9:string "BI-98c486052a51")
        (m10:string "CO-98c486052a51")
        (m11:string "OS-98c486052a51")
        (m12:string "IR-98c486052a51")

    )
    (ref-TS01-C1::DPTF|C_SetFee patron m1 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m1 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m1 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m2 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m2 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m2 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m3 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m3 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m3 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m4 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m4 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m4 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m5 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m5 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m5 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m6 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m6 true)
    ;(ref-TS01-C1::DPTF|C_ToggleFeeLock patron m6 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m7 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m7 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m7 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m8 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m8 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m8 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m9 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m9 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m9 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m10 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m10 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m10 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m11 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m11 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m11 true)

    (ref-TS01-C1::DPTF|C_SetFee patron m12 10.0)
    (ref-TS01-C1::DPTF|C_ToggleFee patron m12 true)
    (ref-TS01-C1::DPTF|C_ToggleFeeLock patron m12 true)
    [
        (format "AH has {} GAS" [(ref-DPTF::UR_AccountSupply (ref-DALOS::UR_IgnisID) KST.ANHD)])
    ]

)

(print "")
(print "")
(format "<<<<<<<Setup Autostake RTs Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "MultiTransfer 3|3")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)

(let
    (
        (patron:string KST.ANHD)
        (receiver:string KST.EMMA)
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
    )
    (ref-TS01-C1::DPTF|C_MultiTransfer
        patron
        [
            "LI-98c486052a51" "MG-98c486052a51" "AL-98c486052a51" "TI-98c486052a51" "GE-98c486052a51" 
            "GA-98c486052a51" "IN-98c486052a51" "TE-98c486052a51" "BI-98c486052a51" "CO-98c486052a51"
            ;"ELITEAURYN-98c486052a51"
        ]
        patron
        receiver
        (make-list 10 15.0)
        false
    )
    [
        (format "AH has {} GAS" [(ref-DPTF::UR_AccountSupply (ref-DALOS::UR_IgnisID) KST.ANHD)])
    ]

)

(print "")
(print "")
(format "<<<<<<<MultiTransfer 3|3 x10 After ATS Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;
;;
;;
;;
;;
;;
;;
;;
;;BULK TRANSFER TESTS
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "DPTF Tx 006 BulkTransfer Tests")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(env-sigs
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)

(let
    (
        (smart-patron:string KST.ATSTK)
        (patron:string KST.ANHD)
        (emma:string KST.EMMA)
        (lumy:string KST.LUMY)
        (receiver-lst:[string]
            [KST.FLRN KST.KISS KST.BYTA KST.PLCS KST.COCA KST.EMMA KST.LUMY KST.NANI KST.AOZT] ;KST.PLCS
        )
        (receiver-lst2:[string]
            [KST.FLRN KST.KISS KST.BYTA KST.PLCS KST.SWAPR] ;KST.KISS KST.PLCS KST.NANI KST.AOZT]
        )
        ;(ref-DALOS:module{OuronetDalosV4} DALOS)
        ;(ref-DPTF:module{DemiourgosPactTrueFungibleV5} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOneV4} TS01-C1)
        (ref-TFT:module{TrueFungibleTransferV7} TFT)
        (ouro:string "OURO-98c486052a51")
        (a:string "AURYN-98c486052a51")
        (ea:string "ELITEAURYN-98c486052a51")
        (u:string "UNITY-98c486052a51")
    )
    (ref-TS01-C1::DPTF|C_BulkTransfer
        patron
        ouro
        patron
        receiver-lst
        (make-list 9 17.0)
    )
)

(print "")
(print "")
(format "<<<<<<<BulkTrasnfer Custom Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)


