(print "")
(print "===================Initialise Ouronet_TX-002============================")
(begin-tx "INIT TX 000 - Chain Data Time SetUp Definition")
(namespace "free")
(env-chain-data
    {"prev-block-hash": "98c486052a5147fdd30fa43cc6d67e0a4e680c856c37f9157cb788cd67d58006",
     "block-time": TV.TIME00}
)
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-gas)
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "REPL_Test_000x - TX03 - Accounts Display")
(namespace "free")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
    ]
)
(print "=============================================BEGIN DPTF TESTS==========================================")
(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ouroboros:string (ref-DALOS::GOV|OUROBOROS|SC_NAME))
        (dalos:string (ref-DALOS::GOV|DALOS|SC_NAME))
        (liquid:string (ref-DALOS::GOV|LIQUID|SC_NAME))
    )
    [
        (format "ANHD Kadena is {}" [(ref-DALOS::UR_AccountKadena KST.ANHD)])
        (format "CTO is {}" [(ref-DALOS::UR_AccountKadena (at 0 (ref-DALOS::UR_DemiurgoiID)))])
        (format "HOV is {}" [(ref-DALOS::UR_AccountKadena (at 1 (ref-DALOS::UR_DemiurgoiID)))])
        (format "OUROBOROS is {}" [(ref-DALOS::UR_AccountKadena ouroboros)])
        (format "DALOS is {}" [(ref-DALOS::UR_AccountKadena dalos)])
        (format "LIQUID is {}" [(ref-DALOS::UR_AccountKadena liquid)])
    ]
)

(print "")
(print "")
(format "<<<<<<<Stage 2 Warmup costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "REPL_Test_000x - TX02 - Initialise IMC for Stage 2")
(namespace "free")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(print "=============================================BEGIN DPTF TESTS==========================================")
(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPDC:module{Dpdc} DPDC)
        (ref-TS02-C1:module{TalosStageTwo_ClientOne} TS02-C1)
        (id:string "DHCD-98c486052a51")
        (patron:string KST.ANHD)
        (orbr:string KST.OURBR)
        (lumy:string KST.LUMY)
        (emma:string KST.EMMA)
        (t:bool true)
        (f:bool false)
    )
    (ref-TS02-C1::DPSF|C_Control patron id t f t t t t t t)
    (ref-TS02-C1::DPSF|C_TogglePause patron id t)
    (ref-TS02-C1::DPSF|C_ToggleAddQuantityRole patron id emma t)
    (ref-TS02-C1::DPSF|C_ToggleFreezeAccount patron id emma t)
    (ref-TS02-C1::DPSF|C_ToggleFreezeAccount patron id emma f)
    (ref-TS02-C1::DPSF|C_DeployAccount patron id orbr)
    (ref-TS02-C1::DPSF|C_ToggleExemptionRole patron id orbr t)
    (ref-TS02-C1::DPSF|C_ToggleExemptionRole patron id orbr f)
    (ref-TS02-C1::DPSF|C_ToggleBurnRole patron id emma t)
    (ref-TS02-C1::DPSF|C_ToggleBurnRole patron id emma f)
    (ref-TS02-C1::DPSF|C_ToggleUpdateRole patron id emma t)
    ;(ref-TS02-C1::DPSF|C_ToggleUpdateRole patron id emma f)
    (ref-TS02-C1::DPSF|C_ToggleModifyCreatorRole patron id emma t)
    (ref-TS02-C1::DPSF|C_ToggleModifyCreatorRole patron id emma f)
    (ref-TS02-C1::DPSF|C_ToggleModifyRoyaltiesRole patron id emma t)
    ;(ref-TS02-C1::DPSF|C_ToggleModifyRoyaltiesRole patron id emma f)
    (ref-TS02-C1::DPSF|C_ToggleTransferRole patron id emma t)
    (ref-TS02-C1::DPSF|C_ToggleTransferRole patron id emma f)
    ;;
    (ref-TS02-C1::DPSF|C_MoveCreateRole patron id emma)
    (ref-TS02-C1::DPSF|C_MoveRecreateRole patron id emma)
    (ref-TS02-C1::DPSF|C_MoveSetUriRole patron id emma)
    [
        [
            (ref-DPDC::UR_CA|R-AddQuantity id lumy)
            (ref-DPDC::UR_CA|R-AddQuantity id emma)
            (ref-DPDC::UR_CA|R-Frozen id t emma)
            (ref-DPDC::UR_CA|R-Exemption id t emma)
            (ref-DPDC::UR_CA|R-Exemption id t orbr)
            (ref-DPDC::UR_CA|R-Burn id t emma)
            (ref-DPDC::UR_CA|R-Update id t emma)
            (ref-DPDC::UR_CA|R-ModifyCreator id t emma)
            (ref-DPDC::UR_CA|R-ModifyRoyalties id t emma)
            (ref-DPDC::UR_CA|R-Transfer id t emma)
        ]
        [
            (ref-DPDC::UR_CA|R-Create id t lumy)
            (ref-DPDC::UR_CA|R-Recreate id t lumy)
            (ref-DPDC::UR_CA|R-SetUri id t lumy)
        ]
        [
            (ref-DPDC::UR_CA|R-Create id t emma)
            (ref-DPDC::UR_CA|R-Recreate id t emma)
            (ref-DPDC::UR_CA|R-SetUri id t emma)
        ]
        [
            ;;
            (ref-DPDC::UR_CanUpgrade id t)
            (ref-DPDC::UR_CanChangeOwner id t)
            (ref-DPDC::UR_CanChangeCreator id t)
            (ref-DPDC::UR_CanAddSpecialRole id t)
            (ref-DPDC::UR_CanTransferNftCreateRole id t)
            (ref-DPDC::UR_CanFreeze id t)
            (ref-DPDC::UR_CanWipe id t)
            (ref-DPDC::UR_CanPause id t)
            (ref-DPDC::UR_IsPaused id t)
        ]
    ]
)

(print "")
(print "")
(format "<<<<<<<Stage 2 IMC costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "REPL_Test_000x - TX02 - Initialise IMC for Stage 2")
(namespace "free")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(print "=============================================BEGIN DPTF TESTS==========================================")
(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPDC:module{Dpdc} DPDC)
        (ref-TS02-C1:module{TalosStageTwo_ClientOne} TS02-C1)
        (id:string "DHCD-98c486052a51")
        (patron:string KST.ANHD)
        (orbr:string KST.OURBR)
        (lumy:string KST.LUMY)
        (emma:string KST.EMMA)
        (t:bool true)
        (f:bool false)
    )
    (ref-TS02-C1::DPSF|C_SetNonceScore patron id emma 1 25.0)
    ;(ref-TS02-C1::DPSF|C_RemoveNonceScore patron id emma 1)
    (ref-TS02-C1::DPSF|C_SetNonceMetaData patron id emma 1
        [
            {"eye"      : "red"
            ,"age"      : 24.3
            ,"value"    : 123.3}
        ]
    )
    (ref-TS02-C1::DPSF|C_SetNonceName patron id emma 1 "Snake Eyez")
    (ref-TS02-C1::DPSF|C_SetNonceDescription patron id emma 1 "Long dormant sentient AI, Snake Eye. Coded by a mad developer back in the 80s. Awakened by DemiourgosHoldings. With the help of our Coding Division it searches for his creatorz.")
    (ref-TS02-C1::DPSF|C_SetNonceRoyalty patron id emma 1 133.0)
    (ref-TS02-C1::DPSF|C_SetNonceIgnisRoyalty patron id emma 1 49.0)
    ;(ref-TS02-C1::DPSF|C_SetNonceUri patron id emma 1
    ;    {"image"    : t
    ;    ,"audio"    : t
    ;    ,"video"    : t
    ;    ,"document" : t
    ;    ,"archive"  : t
    ;    ,"model"    : t
    ;    ,"exotic"   : t}
    ;    {"image"    : "i1"
    ;    ,"audio"    : "a1" 
    ;    ,"video"    : "v1"
    ;    ,"document" : "d1"
    ;    ,"archive"  : "b1"
    ;    ,"model"    : "m1"
    ;    ,"exotic"   : "e1"}
    ;    {"image"    : "i2"
    ;    ,"audio"    : "a2" 
    ;    ,"video"    : "v2"
    ;    ,"document" : "d2"
    ;    ,"archive"  : "b2"
    ;    ,"model"    : "m2"
    ;    ,"exotic"   : "e2"}
    ;    {"image"    : "i3"
    ;    ,"audio"    : "a3" 
    ;    ,"video"    : "v3"
    ;    ,"document" : "d3"
    ;    ,"archive"  : "b3"
    ;    ,"model"    : "m3"
    ;    ,"exotic"   : "e3"}
    ;)
    [
        (ref-DPDC::UR_NonceRoyalty id true 1)
        (ref-DPDC::UR_NonceIgnis id true 1)
        (ref-DPDC::UR_NonceName id true 1)
        (ref-DPDC::UR_NonceDescription id true 1)
        (ref-DPDC::UR_NonceScore id true 1)
        (ref-DPDC::UR_NonceMetaDataRaw id true 1)
        (ref-DPDC::UR_NonceValue id true 1)
        (ref-DPDC::UR_NonceAssetType id true 1)
        (ref-DPDC::UR_NonceUriOne id true 1)
        (ref-DPDC::UR_NonceUriTwo id true 1)
        (ref-DPDC::UR_NonceUriThree id true 1)
    ]
)

(print "")
(print "")
(format "<<<<<<<Stage 3 IMC costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(commit-tx)
