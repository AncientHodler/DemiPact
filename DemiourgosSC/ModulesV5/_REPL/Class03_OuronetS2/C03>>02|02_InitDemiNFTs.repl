;MODULE LOADINGS
;;==============================================================================
;; PART 01 - Load NFT Deployer Module
(print "")
(begin-tx "INIT TX 01 - C08>>02|01_DPL-NFT+.pact")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(load "../../Class08_ST02-PostTalos/C08>>02|01_DPL-NFT+.pact")
(format "<<<<<<<NFT Deployer PACT Costs {} GAS>>>>>>>" [(env-gas)])
(commit-tx)
(print "")
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
;; PART 02 - Load Constant Modules (for Repl Testing purposes)
(begin-tx "Constant Module for NFT Deployment")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(module KNFT GOVERNANCE
    (defcap GOVERNANCE () true)

    (defconst CNFT "Ѻ.ÅτhGźνΣhςвiàÁĘĚДÏWÉΨTěCÃŒnæi9цéŘQí¢лΞÛIчмfÓeżÜýЯàDÖ5αȚÞVđσγ₱0ęЬÔĄsĄLлKùvåH£ΞMFУûÊyđÜqdŽŚЖsĘъsПÂÔØŹÞŮγŚΣЧ6Ïж¢чPyòлБ14ÚęŃĄåîêтηΛbΦđkûÇĂζsБúĎdŸUЛзÙÂÚJηXťćж¥zщòÁŸRĘ")
)

(module TVNFT GOVERNANCE
    (defcap GOVERNANCE () true)

    (defconst TIME00 (time "2024-10-10T00:00:00Z"))
    (defconst TIME01 (time "2024-10-28T00:00:00Z"))
    (defconst TIME02 (time "2024-11-15T16:00:00Z"))
    (defconst TIME03 (time "2024-11-30T16:00:00Z"))
    (defconst TIME04 (time "2024-12-15T16:00:00Z"))
    (defconst TIME05 (time "2024-12-29T16:00:00Z"))
)

(env-gas)
(commit-tx)

(begin-tx "NFT - Use Modules")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(use free.DPL-NFT)  ;;

(env-gas)
(commit-tx)
;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 03 - Chain Data Time SetUp Definition
(print "==========================InitSnake_TX-02===============================")
(begin-tx "Init STEP 00 - Chain Data Time SetUp Definition")
(namespace "free")
(env-chain-data
    {"prev-block-hash": "98c486052a5147fdd30fa43cc6d67e0a4e680c856c37f9157cb788cd67d58006",
     "block-time": TVNFT.TIME00}
)
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-gas)
(commit-tx)
;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 04 - Executing NFT Deployment Functions
;;
;;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;;
(begin-tx "Init STEP 001")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")

(let
    ((ref-DPL|NFT:module{DeployerNft} DPL-NFT))
    (ref-DPL|NFT::A_Step001)
)
(print "")
(print "")
(format "<<<<<<<STEP 001 Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 002 - Create Coding Division Collection")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPL|NFT:module{DeployerNft} DPL-NFT)
        (patron:string  KST.ANHD)
        (emma:string KST.LUMY)
        (lumy:string KST.EMMA)
        (split-kda:[decimal]
            (ref-DALOS::URC_SplitKDAPrices
                patron
                (ref-DALOS::UR_UsagePrice "dpsf")
            )
        )
    )
    (env-sigs
        [   
            { "key": "PK_AncientHodler", "caps": [] }
            { "key": "PK_Lumy", "caps": [] }
            { "key": "PK_Emma", "caps": [] }
            { "key": "6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" , 
              "caps": 
                [
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b"
                        (at 2 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e"
                        (at 0 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:Y_iaJ6fE-ic7kwTtLfty66e3zyGGYIX7OdiMrIdkYBg"
                        (at 3 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:HVNhO-WfROlC-guMUNk91MJWPzfSiP1O7Ip4T4g93O0"
                        (at 1 split-kda)
                    )
                ]
            }
        ]
    )
    (ref-DPL|NFT::C_IssueCodingDivision patron emma lumy)
)
(print "")
(print "")
(format "<<<<<<<STEP 002 Deploying Coding Division Collection Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 003 - Issue Coding Division Elements")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-DPL|NFT:module{DeployerNft} DPL-NFT)
        (patron:string  KST.ANHD)
    )
    (ref-DPL|NFT::C_IssueCodingDivisionElements patron "DHCD-98c486052a51")
    
)
(print "")
(print "")
(format "<<<<<<<STEP 003 Isse Coding Division Elements Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 004 - Create VestaX Finance Collection")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-DALOS:module{OuronetDalosV4} DALOS)
        (ref-DPL|NFT:module{DeployerNft} DPL-NFT)
        (patron:string  KST.ANHD)
        (emma:string KST.LUMY)
        (lumy:string KST.EMMA)
        (split-kda:[decimal]
            (ref-DALOS::URC_SplitKDAPrices
                patron
                (ref-DALOS::UR_UsagePrice "dpsf")
            )
        )
    )
    (env-sigs
        [   
            { "key": "PK_AncientHodler", "caps": [] }
            { "key": "PK_Lumy", "caps": [] }
            { "key": "PK_Emma", "caps": [] }
            { "key": "6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" , 
              "caps": 
                [
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b"
                        (at 2 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e"
                        (at 0 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:Y_iaJ6fE-ic7kwTtLfty66e3zyGGYIX7OdiMrIdkYBg"
                        (at 3 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" 
                        "c:HVNhO-WfROlC-guMUNk91MJWPzfSiP1O7Ip4T4g93O0"
                        (at 1 split-kda)
                    )
                ]
            }
        ]
    )
    (ref-DPL|NFT::C_IssueVestaxFinance patron emma lumy)
)
(print "")
(print "")
(format "<<<<<<<STEP 002 Deploying VestaX Finance Collection Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "Init STEP 005 - Issue VestaX Finance Elements")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs
    [
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Lumy", "caps": [] }
    ]
)
(namespace "free")

(let
    (
        (ref-DPL|NFT:module{DeployerNft} DPL-NFT)
        (patron:string  KST.ANHD)
    )
    (ref-DPL|NFT::C_IssueVestaxFinanceElements patron "DHVX-98c486052a51")
    
)
(print "")
(print "")
(format "<<<<<<<STEP 003 Issue VestaxFinance Elements Costs {} GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)