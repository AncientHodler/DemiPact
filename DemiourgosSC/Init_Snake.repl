;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 01 - KeySets Definitions
(print "==========================TX01-KEY Definitions=========================")
(print "==========================Define==================free.DH-Master-Keyset")




(begin-tx)
(module KC GOVERNANCE
    (defcap GOVERNANCE () true)

    ;;User Names
    (defconst KADN_NAME_SNDER00 "k:368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca")

    (defconst KADN_NAME_0000 "k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263")
    (defconst KADN_PBKY_0000 (drop 2 KADN_NAME_0000))
    (defconst DPTS_NAME_0000 "AncientHodler")
    (defconst DPTS_PBKY_0000 "PK_AncientHodler")
    
    (defconst KADN_NAME_000a "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e")
    (defconst KADN_PBKY_000a (drop 2 KADN_NAME_000a))
    (defconst DPTS_NAME_000a "Florian")
    (defconst DPTS_PBKY_000a "PK_Florean")

    (defconst KADN_NAME_000b "k:ecaeae048b6e4b1d4cd9b5ba41041b39e05ac3a7b32f495a12823cb1c5ad0f48")
    (defconst KADN_PBKY_000b (drop 2 KADN_NAME_000b))
    (defconst DPTS_NAME_000b "Emma")
    (defconst DPTS_PBKY_000b "PK_Emma")

    (defconst KADN_NAME_000c "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b")
    (defconst KADN_PBKY_000c (drop 2 KADN_NAME_000b))
    (defconst DPTS_NAME_000c "Byta")
    (defconst DPTS_PBKY_000c "PK_Byta")

    ;;Smart Contracts
    (defconst KADN_NAME_0001 "k:7c9cd45184af5f61b55178898e00404ec04f795e10fff14b1ea86f4c35ff3a1e")
    (defconst KADN_PBKY_0001 (drop 2 KADN_NAME_0001))
    (defconst DPTS_NAME_0001 "Ouroboros")
    (defconst DPTS_PBKY_0001 "PK_Ouroboros")

    (defconst KADN_NAME_0002 "k:e0eab7eda0754b0927cb496616a7ab153bfd5928aa18d19018712db9c5c5c0b9")
    (defconst KADN_PBKY_0002 (drop 2 KADN_NAME_0002))
    (defconst DPTS_NAME_0002 "GasTanker")
    (defconst DPTS_PBKY_0002 "PK_GasTanker")

    (defconst KADN_NAME_0003 "k:a3506391811789fe88c4b8507069016eeb9946f3cb6d0b6214e700c343187c98")
    (defconst KADN_PBKY_0003 (drop 2 KADN_NAME_0003))
    (defconst DPTS_NAME_0003 "KadenaLiquidStaking")
    (defconst DPTS_PBKY_0003 "PK_KadenaLiquidStaking")

    (defconst KADN_NAME_0004 "k:89faf537ec7282d55488de28c454448a20659607adc52f875da30a4fd4ed2d12")
    (defconst KADN_PBKY_0004 (drop 2 KADN_NAME_0004))
    (defconst DPTS_NAME_0004 "SnakeAutostake")
    (defconst DPTS_PBKY_0004 "PK_SnakeAutostake")

    (defconst KADN_NAME_0005 "k:4728327e1b4790cb5eb4c3b3c531ba1aed00e86cd9f6252bfb78f71c44822d6d")
    (defconst KADN_PBKY_0005 (drop 2 KADN_NAME_0005))
    (defconst DPTS_NAME_0005 "SnakeVesting")
    (defconst DPTS_PBKY_0005 "PK_SnakeVesting")
)

(module TV GOVERNANCE
    (defcap GOVERNANCE () true)
    
    (defconst TIME00 (time "2024-07-12T00:00:00Z"))
    (defconst TIME01 (time "2024-07-13T00:00:00Z"))
    (defconst TIME02 (time "2024-07-14T16:00:00Z"))
    (defconst TIME03 (time "2024-07-15T16:00:00Z"))
    (defconst TIME04 (time "2024-07-16T16:00:00Z"))
    (defconst TIME05 (time "2024-07-17T16:00:00Z"))
)

(env-data
    {
        ;;DPTS KEYS
        ;;DEMI-MASTER-KEYS
        "DemiourgosSithMasters": { "keys": [KC.DPTS_PBKY_0000, KC.DPTS_PBKY_000a], "pred": "keys-any" },
        "KEY_SC_Ouroboros": { "keys": [KC.DPTS_PBKY_0000, KC.DPTS_PBKY_0001], "pred": "keys-any" },
        "KEY_SC_GasTanker": { "keys": [KC.DPTS_PBKY_0000, KC.DPTS_PBKY_0002], "pred": "keys-any" },
        "KEY_SC_KadenaLiquidStaking": { "keys": [KC.DPTS_PBKY_0000, KC.DPTS_PBKY_0003], "pred": "keys-any" },
        ;;DEMI-SC-KEYS
        "KEY_SC_SnakeAutostake": { "keys": [KC.DPTS_PBKY_0004]},
        "KEY_SC_SnakeVesting": { "keys": [KC.DPTS_PBKY_0005]},
        ;;DEMI-USER-KEYS
        "KEY_US_AncientHodler": { "keys": [KC.DPTS_PBKY_0000]},
        "KEY_US_Florian": { "keys": [KC.DPTS_PBKY_000a]},
        "KEY_US_Emma": { "keys": [KC.DPTS_PBKY_000b]},
        "KEY_US_Byta": { "keys": [KC.DPTS_PBKY_000c]},

        ;;KADENA KEYS
        "KEY_KDA_AncientHodler": { "keys": [KC.KADN_PBKY_0000]},
        "KEY_KDA_Florian": { "keys": [KC.KADN_PBKY_000a]},
        "KEY_KDA_Emma": { "keys": [KC.KADN_PBKY_000b]},
        "KEY_KDA_Byta": { "keys": [KC.KADN_PBKY_000c]},
        "KEY_KDA_Ouroboros": { "keys": [KC.KADN_PBKY_0001]},
        "KEY_KDA_GasTanker": { "keys": [KC.KADN_PBKY_0002]},
        "KEY_KDA_KadenaLiquidStaking": { "keys": [KC.KADN_PBKY_0003]},
        "KEY_KDA_SnakeAutostake": { "keys": [KC.KADN_PBKY_0004]},
        "KEY_KDA_SnakeVesting": { "keys": [KC.KADN_PBKY_0004]}
    }
)
;;Entering Namespace Free
(namespace "free")

;;DPTS KEYSETTS DEFINITIONS

    ;;DEMI MASTER KEYSETS
    (define-keyset "free.DH_Master-Keyset" (read-keyset "DemiourgosSithMasters"))
    (define-keyset "free.DH_SC_Ouroboros-Keyset" (read-keyset "KEY_SC_Ouroboros"))
    (define-keyset "free.DH_SC_GAS-Keyset" (read-keyset "KEY_SC_GasTanker"))
    (define-keyset "free.DH_SC_KadenaLiquidStaking-Keyset" (read-keyset "KEY_SC_KadenaLiquidStaking"))

    ;;DEMI SMART_CONTRACTS KEYSETS
    (define-keyset "free.DH_SC_Autostake-Keyset" (read-keyset "KEY_SC_SnakeAutostake"))
    (define-keyset "free.DH_SC_Vesting-Keyset" (read-keyset "KEY_SC_SnakeVesting"))

    ;;USER KEYSETS
    (define-keyset "free.User0000-Keyset" (read-keyset "KEY_US_AncientHodler"))
    (define-keyset "free.User000a-Keyset" (read-keyset "KEY_US_Florian"))
    (define-keyset "free.User000b-Keyset" (read-keyset "KEY_US_Emma"))
    (define-keyset "free.User000c-Keyset" (read-keyset "KEY_US_Byta"))

;;KADENA KEYSETTS DEFINITIONS

    (define-keyset "free.KDA_Keyset-AncientHodler" (read-keyset "KEY_KDA_AncientHodler"))
    (define-keyset "free.KDA_Keyset-Florian" (read-keyset "KEY_KDA_Florian"))
    (define-keyset "free.KDA_Keyset-Emma" (read-keyset "KEY_KDA_Emma"))
    (define-keyset "free.KDA_Keyset-Byta" (read-keyset "KEY_KDA_Byta"))
    (define-keyset "free.KDA_Keyset-Ouroboros" (read-keyset "KEY_KDA_Ouroboros"))
    (define-keyset "free.KDA_Keyset-GasTanker" (read-keyset "KEY_KDA_GasTanker"))
    (define-keyset "free.KDA_Keyset-KadenaLiquidStaking" (read-keyset "KEY_KDA_KadenaLiquidStaking"))
    (define-keyset "free.KDA_Keyset-SnakeAutostake" (read-keyset "KEY_KDA_SnakeAutostake"))
    (define-keyset "free.KDA_Keyset-SnakeVesting" (read-keyset "KEY_KDA_SnakeVesting"))

(commit-tx)


(begin-tx) "Set Enviroment Data"
(env-chain-data
    {"prev-block-hash": "98c486052a5147fdd30fa43cc6d67e0a4e680c856c37f9157cb788cd67d58006",
     "block-time": TV.TIME00}
)
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-gas)
(commit-tx)


;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 02 - Load pact Modules
(print "==========================TX02=========================================")
(print "==========================Load-Pact-files==============================")

;(begin-tx "Load Kadena Smart-Contract")
;(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
;(namespace "free")

;(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/KadenaCoin.pact")
;(use free.coin)

;(env-gas)
;(commit-tx)



(begin-tx "Load Demiourgos Pact Token Standard DPTS")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/OUROBOROS.pact")
(env-gas)
(commit-tx)

(begin-tx "Load Meta Fungible DPMF")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/DPMF.pact")
(env-gas)
(commit-tx)

(begin-tx "Load Autostake")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/Autostake.pact")
(env-gas)
(commit-tx)

(begin-tx "Load Vesting")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/Vesting.pact")
(env-gas)
(commit-tx)

(begin-tx "Use Modules")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(use free.OUROBOROS)
(use free.DPMF)
(use free.DH_SC_Autostake)
(use free.DH_SC_Vesting)

(env-gas)
(commit-tx)




(begin-tx "Fuel Ancient Hodler with Kadena")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs   [{  "key": "368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca", 
                "caps": [
                (coin.TRANSFER "sender00" KC.KADN_NAME_0000 1000.0)
                        ]}
             {  "key": KC.KADN_PBKY_0000, 
                "caps": [
                (coin.TRANSFER KC.KADN_NAME_0000 KC.KADN_NAME_000c 20.0)
                (coin.TRANSFER KC.KADN_NAME_0000 KC.KADN_NAME_000a 20.0)
                (coin.TRANSFER KC.KADN_NAME_0000 KC.KADN_NAME_000b 20.0)
                (coin.TRANSFER KC.KADN_NAME_0000 KC.KADN_NAME_0003 20.0)
                (coin.TRANSFER KC.KADN_NAME_0000 KC.KADN_NAME_0002 20.0)
                        ]}])

;;Transfer KDA to AncientHodler Account
;(test-capability (coin.TRANSFER "sender00" "AncientHodler" 1000.0))
;(coin.TRANSFER "AncientHodler" "Florean" 10.0)
;(coin.TRANSFER "AncientHodler" "Gas-Tanker" 10.0)

(free.OUROBOROS.TransferKadenaAnew "sender00" KC.KADN_NAME_0000 (describe-keyset "free.KDA_Keyset-AncientHodler") 1000.0)
(free.OUROBOROS.TransferKadenaAnew KC.KADN_NAME_0000 KC.KADN_NAME_000c (describe-keyset "free.KDA_Keyset-Byta") 20.0)
(free.OUROBOROS.TransferKadenaAnew KC.KADN_NAME_0000 KC.KADN_NAME_000a (describe-keyset "free.KDA_Keyset-Florian") 20.0)
(free.OUROBOROS.TransferKadenaAnew KC.KADN_NAME_0000 KC.KADN_NAME_000b (describe-keyset "free.KDA_Keyset-Emma") 20.0)
(free.OUROBOROS.TransferKadenaAnew KC.KADN_NAME_0000 KC.KADN_NAME_0003 (describe-keyset "free.KDA_Keyset-LiquidStaking") 20.0)
(free.OUROBOROS.TransferKadenaAnew KC.KADN_NAME_0000 KC.KADN_NAME_0002 (describe-keyset "free.KDA_Keyset-GasTanker") 20.0)

(env-sigs [])
(env-gas)
(commit-tx)


(begin-tx "Kadena transfer Test")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": KC.KADN_PBKY_0000, "caps": [(coin.TRANSFER KC.KADN_NAME_0000 KC.KADN_NAME_0002 10.0)] }])

(free.OUROBOROS.TransferKadena KC.KADN_NAME_0000 KC.KADN_NAME_0002 10.0)

(env-sigs [])
(env-gas)
(commit-tx)
;;(coin.TRANSFER "AncientHodler" "Gas-Tanker" 10.0)
;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 03 - Initialise Demiourgos Ecosystem
;;01]Issue Ouro with initial mint amount and set up the vGas
(begin-tx "Issue OURO Transactions")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PK_AncientHodler", "caps": [] }
            { "key": "PK_Emma", "caps": [] }])
            
    (free.OUROBOROS.C_DeployStandardDPTSAccount "AncientHodler" (describe-keyset "free.User0000-Keyset") KC.KADN_NAME_0000)
    (free.OUROBOROS.C_DeployStandardDPTSAccount "Emma" (describe-keyset "free.User000b-Keyset") KC.KADN_NAME_000b)
    (free.OUROBOROS.C_DeployStandardDPTSAccount "Byta" (describe-keyset "free.User000c-Keyset") KC.KADN_NAME_000c)
    (free.OUROBOROS.A_InitialiseOuroboros "AncientHodler")
    (free.OUROBOROS.C_Mint
        "AncientHodler"
        "OURO-98c486052a51"
        "Emma"
        50000.0
        true
    )

    (free.OUROBOROS.C_TransferTrueFungible "Emma" "OURO-98c486052a51" "Emma" "AncientHodler" 50000.0)
    (free.OUROBOROS.C_MakeGAS "AncientHodler" "AncientHodler" "AncientHodler" 100.0)
    (free.OUROBOROS.A_ToggleGas false true)             ;;turn virtual gas collection to on
    ;(free.OUROBOROS.A_ToggleGas true true)              ;;turn native gas collection to on
    
(env-sigs [])
(env-gas)
(commit-tx)


;;02]Initialise Autostake
(begin-tx "Initialise Snake_Autostake TX")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PK_SnakeAutostake", "caps": [] },
            { "key": "PK_AncientHodler", "caps": [] }])

    (free.DH_SC_Autostake.A_InitialiseAutostake "AncientHodler" "OURO-98c486052a51")                ;;Autostake-Pool Key

(env-sigs [])
(env-gas)
(commit-tx)


;;04]Initialise Vesting
(begin-tx "Initialise Vesting TX")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PK_SnakeVesting", "caps": [] },
            { "key": "PK_AncientHodler", "caps": [] }])

    (free.DH_SC_Vesting.A_InitialiseVesting "AncientHodler")                                        ;;Either Vesting Key or AH Key

(env-sigs [])
(env-gas)
(commit-tx)


;;05]Set transfer-role and fee-exemption role for Auryns to Vesting SC and
;;06]Set Vested Elite-Auryn Id in the Autostake-Pool Trinity Table
(begin-tx "Setting transfer Role for Auryns to Vesting Account")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PK_SnakeAutostake", "caps": [] },
            { "key": "PK_AncientHodler", "caps": [] }])

    (free.OUROBOROS.C_ToggleFeeExemptionRole "AncientHodler" "AURYN-98c486052a51" "Snake_Vesting" true)          ;;Autostake Pool Key
    (free.OUROBOROS.C_ToggleFeeExemptionRole "AncientHodler" "ELITEAURYN-98c486052a51" "Snake_Vesting" true)     ;;Autostake Pool Key
    (free.OUROBOROS.C_ToggleTransferRole "AncientHodler" "AURYN-98c486052a51" "Snake_Vesting" true)
    (free.OUROBOROS.C_ToggleTransferRole "AncientHodler" "ELITEAURYN-98c486052a51" "Snake_Vesting" true)
    (free.DH_SC_Autostake.A_SaveVestedEliteAurynID "VEAURYN-98c486052a51")                                       ;;Autostake Pool Key

(env-sigs [])
(env-gas)
(commit-tx)
