;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 01 - KeySets Definitions
(print "==========================TX01-KEY Definitions=========================")
(print "==========================Define==================free.DH-Master-Keyset")
(begin-tx)
(module KC GOVERNANCE
    (defcap GOVERNANCE () true)

    ;;User Names
    (defconst NAME001 "AncientHodler")
    (defconst NAME002 "Florean")
    (defconst NAME003 "Pablo")
    (defconst NAME004 "Byta")
    (defconst NAME005 "Lumy")
    (defconst NAME006 "Emma")
    (defconst NAME007 "Bula")
    (defconst NAME008 "Kiss")
    (defconst NAME009 "Plcs")
    (defconst NAME010 "Satanel")

    ;;SmartContract Names
    (defconst SCN001 "Snake_Autostake")
    (defconst SCN002 "Snake_Vesting")

    ;;Private Keys
    (defconst DHADMIN1 "PrivateKey_AncientHodler")
    (defconst DHADMIN2 "PrivateKey_Florean")
    (defconst DHADMIN3 "PrivateKey_Pablo")

    (defconst DH_SC001 "PrivateKey_Autostake-Pool")
    (defconst DH_SC002 "PrivateKey_Vesting")

    (defconst USER_001 "PrivateKey_Byta")
    (defconst USER_002 "PrivateKey_Lumy")
    (defconst USER_003 "PrivateKey_Emma")
    (defconst USER_004 "PrivateKey_Bula")
    (defconst USER_005 "PrivateKey_Kiss")
    (defconst USER_006 "PrivateKey_Plcs")
    (defconst USER_007 "PrivateKey_Satanel")
)

(module TV GOVERNANCE
    (defcap GOVERNANCE () true)
    
    (defconst TIME00 (time "2024-07-12T00:00:00Z"))
    (defconst TIME01 (time "2024-07-13T00:00:00Z"))
    (defconst TIME02 (time "2024-07-14T16:00:00Z"))
    (defconst TIME03 (time "2024-07-15T16:00:00Z"))
    (defconst TIME04 (time "2024-07-16T16:00:00Z"))
    (defconst TIME05 (time "2024-07-17T16:00:00Z"))
)

(env-data
    {
        "DemiourgosTrinity": { "keys": [KC.DHADMIN1, KC.DHADMIN2, KC.DHADMIN3], "pred": "keys-any" },
        "DemiourgosSithMasters": { "keys": [KC.DHADMIN1, KC.DHADMIN2], "pred": "keys-any" },

        "KEY_SC_Autostake-Pool": { "keys": [KC.DH_SC001]},
        "KEY_SC_Vesting": { "keys": [KC.DH_SC002]},

        "KEY_US_AHD": { "keys": [KC.DHADMIN1]},
        
        "KEY_US_001": { "keys": [KC.USER_001]},
        "KEY_US_002": { "keys": [KC.USER_002]},
        "KEY_US_003": { "keys": [KC.USER_003]},
        "KEY_US_004": { "keys": [KC.USER_004]},
        "KEY_US_005": { "keys": [KC.USER_005]},
        "KEY_US_006": { "keys": [KC.USER_006]},
        "KEY_US_007": { "keys": [KC.USER_007]}
        
    }
)
;;Entering Namespace Free
(namespace "free")
;; Define KeySets
(define-keyset "free.DH-Master-Keyset" (read-keyset "DemiourgosTrinity"))
(define-keyset "free.DH-GAS-Keyset" (read-keyset "DemiourgosSithMasters"))
(define-keyset "free.DH_SC_Autostake_Key" (read-keyset "KEY_SC_Autostake-Pool"))
(define-keyset "free.DH_SC_Vesting_Key" (read-keyset "KEY_SC_Vesting"))

(define-keyset "free.User000_Keyset" (read-keyset "KEY_US_AHD"))
(define-keyset "free.User001_Keyset" (read-keyset "KEY_US_001"))
(define-keyset "free.User002_Keyset" (read-keyset "KEY_US_002"))
(define-keyset "free.User003_Keyset" (read-keyset "KEY_US_003"))
(define-keyset "free.User004_Keyset" (read-keyset "KEY_US_004"))
(define-keyset "free.User005_Keyset" (read-keyset "KEY_US_005"))
(define-keyset "free.User006_Keyset" (read-keyset "KEY_US_006"))
(define-keyset "free.User007_Keyset" (read-keyset "KEY_US_007"))
(commit-tx)

(begin-tx) "Set Enviroment Data"
(env-chain-data
    {"prev-block-hash": "98c486052a5147fdd30fa43cc6d67e0a4e680c856c37f9157cb788cd67d58006",
     "block-time": TV.TIME00}
)
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-gas)
(commit-tx)
;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 02 - Load pact Modules
(print "==========================TX02=========================================")
(print "==========================Load-Pact-files==============================")

(begin-tx "Load Demiourgos Pact Token Standard DPTS")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/OUROBOROS.pact")
;(env-gas)
;(commit-tx)

;(begin-tx "Load Meta Fungible DPMF")
;(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
;(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/DPMF.pact")
;(env-gas)
;(commit-tx)

;(begin-tx "Load Autostake")
;(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
;(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/Autostake.pact")
;(env-gas)
;(commit-tx)

;(begin-tx "Load Vesting")
;(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
;(namespace "free")
(load "/home/bytales/PactLanguage/DH_Pact/DemiourgosSC/Vesting.pact")
(env-gas)
(commit-tx)

(begin-tx "Use Modules")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(namespace "free")
(use free.OUROBOROS)
(use free.DPMF)
(use free.DH_SC_Autostake)
(use free.DH_SC_Vesting)
(env-gas)
(commit-tx)

;;==============================================================================
;;
;;
;;
;;
;;
;;==============================================================================
;; PART 03 - Initialise Demiourgos Ecosystem

;;01]Issue Ouro with initial mint amount and set up the vGas
(begin-tx "Issue OURO Transactions")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PrivateKey_AncientHodler", "caps": [] }])

    (free.OUROBOROS.C_DeployStandardDPTSAccount "AncientHodler" (describe-keyset "free.User000_Keyset"))

    (free.OUROBOROS.C_IssueTrueFungible
        "AncientHodler"
        "AncientHodler"
        (describe-keyset "free.User000_Keyset")
        "Ouroboros"
        "OURO"
        24
        true    ;;can-change-owner
        true    ;;can-upgrade
        true    ;;can-add-special-role
        true    ;;can-freeze
        true   ;;can-wipe
        true    ;;can-pause
    )

    (free.OUROBOROS.C_MintOrigin
        "AncientHodler"
        "OURO-98c486052a51"
        "AncientHodler"
        50000.0
    )

    (free.OUROBOROS.A_InitialiseGAS "AncientHodler" "OURO-98c486052a51")
    (free.OUROBOROS.C_MakeGAS "AncientHodler" 100.0)
    (free.OUROBOROS.A_TurnGasOn)
    

(env-gas)
(commit-tx)

;;02]Initialise Autostake
(begin-tx "Initialise Snake_Autostake TX")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PrivateKey_Autostake-Pool", "caps": [] },
            { "key": "PrivateKey_AncientHodler", "caps": [] }])

(free.DH_SC_Autostake.A_InitialiseAutostake "AncientHodler" "OURO-98c486052a51")                ;;Autostake-Pool Key


;;03]Set OURO BurnRole to Autostake and Gas-Tanker for OURO
;;set in the Autostake initialisation function


(env-gas)
(commit-tx)

;;04]Initialise Vesting
(begin-tx "Initialise Vesting TX")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PrivateKey_Vesting", "caps": [] },
            { "key": "PrivateKey_AncientHodler", "caps": [] }])

(free.DH_SC_Vesting.A_InitialiseVesting "AncientHodler")                                        ;;Either Vesting Key or AH Key
(env-gas)
(commit-tx)

;;05]Set transfer role for Auryns to Vesting SC and
;;06]Set Vested Elite-Auryn Id in the Autostake-Pool Trinity Table
(begin-tx "Setting transfer Role for Auryns to Vesting Account")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs [ { "key": "PrivateKey_Autostake-Pool", "caps": [] },
            { "key": "PrivateKey_AncientHodler", "caps": [] }])

(free.OUROBOROS.C_SetTransferRole "AncientHodler" "AURYN-98c486052a51" "Snake_Vesting")              ;;Autostake Pool Key
(free.OUROBOROS.C_SetTransferRole "AncientHodler" "ELITEAURYN-98c486052a51" "Snake_Vesting")         ;;Autostake Pool Key
(free.DH_SC_Autostake.A_SaveVestedEliteAurynID "VEAURYN-98c486052a51")          ;;Autostake Pool Key

(env-gas)
(commit-tx)