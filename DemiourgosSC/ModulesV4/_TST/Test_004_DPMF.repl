(print "")
(print "===================Initialise Ouronet_TX-002============================")
(begin-tx "INIT TX 000 - Chain Data Time SetUp Definition")
(namespace "free")
(env-chain-data
    {"prev-block-hash": "98c486052a5147fdd30fa43cc6d67e0a4e680c856c37f9157cb788cd67d58006",
     "block-time": TV.TIME00}
)
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-gas)
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(print "=======================Swap Tests=================================")
(begin-tx "SWP TX 01 - Issue DPMF Test")
(namespace "free")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
    ]
)

(let
    (
        (ref-DALOS:module{OuronetDalosV2} DALOS)
        ;(ref-DPTF:module{DemiourgosPactTrueFungible} DPTF)
        ;(ref-VST:module{Vesting} VST)
        (ref-TS01-C1:module{TalosStageOne_ClientOne} TS01-C1)
        ;(ref-TS01-C2:module{TalosStageOne_ClientTwo} TS01-C2)
        ;(patron:string KST.ANHD)
        (emma:string KST.EMMA)
        (split-kda:[decimal] 
            (ref-DALOS::URC_SplitKDAPrices
                emma
                (ref-DALOS::UR_UsagePrice "dpmf")
            )
        )
        ;(swp-sc:string (ref-DALOS::GOV|SWP|SC_NAME))
    )
    ;"k:ecaeae048b6e4b1d4cd9b5ba41041b39e05ac3a7b32f495a12823cb1c5ad0f48" emma
    ;"k:6fa1d9c3e5078a54038159c9a6bd7182301e16d6f280615eddb18b8bd2d6c263" ah
    (env-sigs
        [   
            { "key": "PK_Emma", "caps": [] }
            { "key": "ecaeae048b6e4b1d4cd9b5ba41041b39e05ac3a7b32f495a12823cb1c5ad0f48" , 
              "caps": 
                [
                    (coin.TRANSFER 
                        "k:ecaeae048b6e4b1d4cd9b5ba41041b39e05ac3a7b32f495a12823cb1c5ad0f48" 
                        "k:50d6c59b21e5e6e55baecaa75a1007de37576bde12d8230dc82459cc01b9484b"
                        (at 2 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:ecaeae048b6e4b1d4cd9b5ba41041b39e05ac3a7b32f495a12823cb1c5ad0f48" 
                        "k:0cb30c0121ff919266121a99ff9359871818932211df94dae4137c29bc0e8f7e"
                        (at 0 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:ecaeae048b6e4b1d4cd9b5ba41041b39e05ac3a7b32f495a12823cb1c5ad0f48" 
                        "c:Y_iaJ6fE-ic7kwTtLfty66e3zyGGYIX7OdiMrIdkYBg"
                        (at 3 split-kda)
                    )
                    (coin.TRANSFER 
                        "k:ecaeae048b6e4b1d4cd9b5ba41041b39e05ac3a7b32f495a12823cb1c5ad0f48" 
                        "c:HVNhO-WfROlC-guMUNk91MJWPzfSiP1O7Ip4T4g93O0"
                        (at 1 split-kda)
                    )
                ]
            }
        ]
    )
    (ref-TS01-C1::DPMF|C_Issue
        emma
        emma
        ["MetaVesta"]
        ["MVST"]
        [24]    ;;precision
        [true]  ;;can change owner
        [true]  ;;can upgrade
        [true]  ;;can can-add-special-role
        [false] ;;can-freeze
        [false] ;;can-wipe
        [true]  ;;can-pause
        [true]  ;;can-transfer-nft-create-role
    )
)

(print "")
(print "")
(format "<<<<<<<STEP 001 Issue DPMF Costs {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)
;;
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;;
(begin-tx "STEP 002 DPMF Tests")
(namespace "free")
(env-gasmodel "table")(env-gaslimit 10000000)(env-gas 0)
(env-sigs 
    [   
        { "key": "PK_AncientHodler", "caps": [] }
        { "key": "PK_Emma", "caps": [] }
    ]
)

(let
    (
        ;(ref-U|CT:module{OuronetConstants} U|CT)
        ;(ref-DALOS:module{OuronetDalosV2} DALOS)
        ;(ref-BRD:module{Branding} BRD)
        ;(ref-SWP:module{Swapper} SWP)
        ;(ref-TS01-A:module{TalosStageOne_Admin} TS01-A)
        ;(ref-DPTF:module{DemiourgosPactTrueFungible} DPTF)
        (ref-TS01-C1:module{TalosStageOne_ClientOne} TS01-C1)
        (ref-DPMF:module{DemiourgosPactMetaFungibleV2} DPMF)
        (patron:string KST.ANHD)
        (emma:string KST.EMMA)
        (dpmf:string "MVST-98c486052a51")

    )
    ;(ref-TS01-C1::DPTF|C_ToggleBurnRole patron dptf patron true)
    ;(ref-TS01-C1::DPTF|C_Burn patron dptf patron 10.0)
    ;(ref-TS01-C1::DPTF|C_Control patron dptf true true true true true true)
    ;(ref-TS01-C1::DPTF|C_DonateFees patron dptf)
    ;(ref-TS01-C1::DPTF|C_ResetFeeTarget patron dptf)
    ;(ref-TS01-C1::DPTF|C_RotateOwnership patron dptf emma)
    ;(ref-TS01-C1::DPTF|C_ToggleFreezeAccount patron dptf patron true)
    ;(ref-TS01-C1::DPTF|C_ToggleFreezeAccount patron dptf patron false)
    ;(ref-TS01-C1::DPTF|C_TogglePause patron dptf true)
    ;(ref-TS01-C1::DPTF|C_Transfer patron dptf patron emma 10.0 false)
    ;(ref-TS01-C1::DPTF|C_ToggleFreezeAccount patron dptf patron true)
    ;(ref-TS01-C1::DPTF|C_Wipe patron dptf patron)
    ;(ref-TS01-C1::DPTF|C_WipePartial patron dptf patron 1777.0)
    (ref-TS01-C1::DPMF|C_ToggleAddQuantityRole patron dpmf emma true)
    (ref-TS01-C1::DPMF|C_ToggleBurnRole patron dpmf emma true)
    ;(ref-TS01-C1::DPMF|C_ToggleTransferRole patron dpmf emma true)
    ;(ref-TS01-C1::DPMF|C_MoveCreateRole patron dpmf patron)
    (ref-TS01-C1::DPMF|C_Mint patron dpmf emma 2500.0 
        [
            {"wing-span" : 230.0, "weight" : 123.32, "passanger-capacity" : 573, "fuel-capacity" : 1250}
            {"wing-span" : 30.0, "weight" : 23.32, "passanger-capacity" : 73, "fuel-capacity" : 250}
        ]
    )
    (ref-TS01-C1::DPMF|C_Mint patron dpmf emma 3500.0 
        [
            {"wing-span" : 1230.0, "weight" : 1243.32, "passanger-capacity" : 5373, "fuel-capacity" : 1250}
            {"wing-span" : 230.0, "weight" : 233.32, "passanger-capacity" : 733, "fuel-capacity" : 2503}
        ]
    )
    (ref-TS01-C1::DPMF|C_Create patron dpmf emma
        [
            {"wing-span" : 12230.0, "weight" : 12443.32, "passanger-capacity" : 53473, "fuel-capacity" : 14250}
            {"wing-span" : 2330.0, "weight" : 2333.32, "passanger-capacity" : 7343, "fuel-capacity" : 25043}
        ]
    )
    (ref-TS01-C1::DPMF|C_AddQuantity patron dpmf 3 emma 555.0)
    (ref-TS01-C1::DPMF|C_Control patron dpmf
        true  ;;can change owner
        true  ;;can upgrade
        true  ;;can can-add-special-role
        true  ;;can-freeze
        true  ;;can-wipe
        true  ;;can-pause
        true  ;;can-transfer-nft-create-role
    )
    (ref-TS01-C1::DPMF|C_RotateOwnership patron dpmf patron)
    (ref-TS01-C1::DPMF|C_Burn patron dpmf 3 emma 200.0)

    (ref-TS01-C1::DPMF|C_TogglePause patron dpmf true)
    (ref-TS01-C1::DPMF|C_TogglePause patron dpmf false)

    (ref-TS01-C1::DPMF|C_MultiBatchTransfer patron dpmf [1 2] emma patron false)
    (ref-TS01-C1::DPMF|C_SingleBatchTransfer patron dpmf 2 patron emma false)
    (ref-TS01-C1::DPMF|C_Transfer patron dpmf 2 emma patron 777.0 false)
    (ref-TS01-C1::DPMF|C_ToggleFreezeAccount patron dpmf patron true)
    ;(ref-TS01-C1::DPMF|C_Wipe patron dpmf patron)
    ;(ref-TS01-C1::DPMF|C_WipePartial patron dpmf patron [1])
    [
        (format "Add Quantity Role for Emma on MVST is {}" [(ref-DPMF::UR_AccountRoleNFTAQ dpmf emma)])
        (format "Burn Role for Emma on MVST is {}" [(ref-DPMF::UR_AccountRoleBurn dpmf emma)])
        (format "Create Role for Emma on MVST is {}" [(ref-DPMF::UR_AccountRoleCreate dpmf emma)])
        (format "Transfer Role for Emma on MVST is {}" [(ref-DPMF::UR_AccountRoleTransfer dpmf emma)])
        (format "Create Role for AH on MVST is {}" [(ref-DPMF::UR_AccountRoleCreate dpmf patron)])
        ;(format "Emma has MVST {}" [(ref-DPMF::UR_AccountSupply dpmf emma)])
        (format "Emma unit of MVST is {}" [(ref-DPMF::UR_AccountUnit dpmf emma)])
        (format "Emma has nonces of MVST {}" [(ref-DPMF::UR_AccountNonces dpmf emma)])
        (format "AH has nonces of MVST {}" [(ref-DPMF::UR_AccountNonces dpmf patron)])
        
        (format "cco <can-change-owner> is {}" [(ref-DPMF::UR_CanChangeOwner dpmf)])
        (format "cu <can-upgrade> is {}" [(ref-DPMF::UR_CanUpgrade dpmf)])
        (format "casr <can-add-special-role> is {}" [(ref-DPMF::UR_CanAddSpecialRole dpmf)])
        (format "cf <can-freeze> is {}" [(ref-DPMF::UR_CanFreeze dpmf)])
        (format "cw <can-wipe> is {}" [(ref-DPMF::UR_CanWipe dpmf)])
        (format "cw <can-pause> is {}" [(ref-DPMF::UR_CanPause dpmf)])
        (format "ctncr <can-pause> is {}" [(ref-DPMF::UR_CanTransferNFTCreateRole dpmf)])

        (format "dpmf owner is {}" [(ref-DPMF::UR_Konto dpmf)])
        (format "Emma has MVST {}" [(ref-DPMF::UR_AccountSupply dpmf emma)])
        (format "AH has MVST {}" [(ref-DPMF::UR_AccountSupply dpmf patron)])

        ;(format "Fee Target is {}" [(ref-DPTF::UR_FeeTarget dptf)])
        ;(format "DPTF Owner is {}" [(ref-DPTF::UR_Konto dptf)])
        ;(format "AH for GA frozen state is {}" [(ref-DPTF::UR_AccountFrozenState dptf patron)])
        ;(format "Pause State for GA is {}" [(ref-DPTF::UR_Paused dptf)])
        ;(format "AH has GA {}" [(ref-DPTF::UR_AccountSupply dptf patron)])
    ]
)

(print "")
(print "")
(format "<<<<<<<STEP 002 DPMF Tests {} KDA GAS>>>>>>>" [(env-gas)])
(print "")
(print "")
(print "===^^^===")
(env-sigs [])
(commit-tx)