(env-gasmodel "table")
(env-gaslimit 150000)
(begin-tx)

(interface calls-foo
  (defun foo1:integer (a:integer))
  (defun foo2:integer (a:integer))
  (defun foo3:integer (a:integer))
  (defun foo4:integer (a:integer))
  (defun foo5:integer (a:integer))
  (defun foo6:integer (a:integer))
  (defun foo7:integer (a:integer))
  (defun foo8:integer (a:integer))
  (defun foo9:integer (a:integer))
  (defun foo10:integer (a:integer))
  (defun foo11:integer (a:integer))
  (defun foo12:integer (a:integer))
  (defun foo13:integer (a:integer))
  (defun foo14:integer (a:integer))
  (defun foo15:integer (a:integer))
  (defun foo16:integer (a:integer))
  (defun foo17:integer (a:integer))
  (defun foo18:integer (a:integer))
  (defun foo19:integer (a:integer))
  (defun foo20:integer (a:integer))
  (defun foo21:integer (a:integer))
  (defun foo22:integer (a:integer))
  (defun foo23:integer (a:integer))
  (defun foo24:integer (a:integer))
  (defun foo25:integer (a:integer))
  (defun foo26:integer (a:integer))
  (defun foo27:integer (a:integer))
  )

(module foo g
  (defcap g () true)
  (implements calls-foo)

  (defun foo1:integer (a:integer)
    (let*
      ((a1 (+ a 1))
       (a2 (+ a1 2))
       (a3 (+ a1 2))
       (a4 (+ a1 2))
       (a5 (+ a1 2))
       (a6 (+ a1 2))
       (a7 (+ a1 2))
       (a8 (+ a1 2))
       (a9 (+ a1 2))
       (a10 (+ a1 2))
       (a11 (+ a1 2))
       (a12 (+ a1 2))
       (a13 (+ a1 2))
       (a14 (+ a1 2))
      )
      a14
      )
  )

  (defun foo2:integer (a:integer)
  (let*
    ((a1 (+ a 1))
     (a2 (+ a1 2))
     (a3 (+ a1 2))
     (a4 (+ a1 2))
     (a5 (+ a1 2))
     (a6 (+ a1 2))
     (a7 (+ a1 2))
     (a8 (+ a1 2))
     (a9 (+ a1 2))
     (a10 (+ a1 2))
     (a11 (+ a1 2))
     (a12 (+ a1 2))
     (a13 (+ a1 2))
     (a14 (+ a1 2))
    )
    a14
    )
)

(defun foo3:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo4:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo5:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo6:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo7:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo8:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo9:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo10:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo11:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo12:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo13:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)
(defun foo14:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo15:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo16:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo17:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo18:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo19:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)


(defun foo20:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo21:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo22:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo23:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo24:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo25:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo26:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

(defun foo27:integer (a:integer)
(let*
  ((a1 (+ a 1))
   (a2 (+ a1 2))
   (a3 (+ a1 2))
   (a4 (+ a1 2))
   (a5 (+ a1 2))
   (a6 (+ a1 2))
   (a7 (+ a1 2))
   (a8 (+ a1 2))
   (a9 (+ a1 2))
   (a10 (+ a1 2))
   (a11 (+ a1 2))
   (a12 (+ a1 2))
   (a13 (+ a1 2))
   (a14 (+ a1 2))
  )
  a14
  )
)

  )
(commit-tx)

(begin-tx)
(env-gas 0)

(module depends-on-foo1 g
  (defcap g () true)
  (use foo)

  (defun call-foo () (foo.foo1 10))
)
(format "Cost of deploying depends-on-foo:static {}" [(env-gas)])
(commit-tx)



(begin-tx)
(env-gas 0)
(module depends-on-foo2 g
  (defcap g () true)

  (defun call-foo ()
    (let 
      (
        (foo-reference:module{calls-foo} foo)
      )
      (foo-reference::foo1 10)
    )
  )
)
(format "Cost of deploying depends-on-foo:dynamic {}" [(env-gas)])
(commit-tx)